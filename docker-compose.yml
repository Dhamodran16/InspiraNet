version: '3.8'

services:
  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8083:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_WS_URL=ws://localhost:8080
    restart: unless-stopped
    networks:
      - meeting-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"      # HTTP API
      - "8080:8080"      # WebSocket
      - "40000-49999:40000-49999/udp"  # MediaSoup ports
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/virtual_meeting
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - SERVER_IP=backend
      - REDIS_URL=redis://redis:6379
      - TURN_URL=turn:turn-server:3478
      - TURN_USERNAME=mediasoup
      - TURN_PASSWORD=mediasoup123
      - FRONTEND_URL=http://localhost:8083
    depends_on:
      - mongodb
      - redis
      - turn-server
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    restart: unless-stopped
    networks:
      - meeting-network

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=virtual_meeting
    volumes:
      - mongodb_data:/data/db
      - ./backend/mongo-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - meeting-network

  # Redis for Session Management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - meeting-network
    command: redis-server --appendonly yes

  # TURN Server for NAT Traversal
  turn-server:
    image: coturn/coturn:latest
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "5349:5349"
      - "5349:5349/udp"
    environment:
      - REALM=localhost
      - USER=mediasoup:mediasoup123
      - CLI_PASSWORD=turn123
    command: |
      turnserver
      --realm=localhost
      --user=mediasoup:mediasoup123
      --cli-password=turn123
      --listening-port=3478
      --tls-listening-port=5349
      --listening-ip=0.0.0.0
      --external-ip=your-server-ip
      --verbose
    restart: unless-stopped
    networks:
      - meeting-network

  # Nginx Reverse Proxy (Optional - for SSL termination)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - meeting-network

volumes:
  mongodb_data:
  redis_data:

networks:
  meeting-network:
    driver: bridge
